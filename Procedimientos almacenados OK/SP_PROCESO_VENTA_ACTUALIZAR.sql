create or replace PROCEDURE SP_PROCESO_VENTA_ACTUALIZAR (

	IN_PROCESO_VENTA_ID 		IN NUMBER,
	IN_ETAPA					IN NUMBER,
	IN_CLIENTEACEPTAACUERDO		IN NUMBER,
	IN_PRECIOVENTATOTAL			IN NUMBER,
	IN_PRECIOCOSTOTOTAL			IN NUMBER,

	OUT_GLOSA 					OUT VARCHAR2,
	OUT_ESTADO 					OUT NUMBER,
	OUT_ID_SALIDA 				OUT NUMBER

)AS 

	EX_Sin_data                 EXCEPTION;
	tiene_datos     NUMBER := 0;

BEGIN

	OUT_GLOSA := 'SP_PROCESO_VENTA_ACTUALIZAR ejecutado exitosamente';
    OUT_ESTADO := 0;

    SELECT
        COUNT(1)
    INTO tiene_datos
    FROM PROCESO_VENTA procesoventa
    WHERE procesoventa.ID = IN_PROCESO_VENTA_ID;

    IF tiene_datos = 0 THEN
        RAISE EX_Sin_data;
    END IF;

	UPDATE PROCESO_VENTA 
	SET 
		PROCESO_VENTA.ETAPA = NVL2( IN_ETAPA, IN_ETAPA, PROCESO_VENTA.ETAPA),
		PROCESO_VENTA.CLIENTEACEPTAACUERDO = NVL2( IN_CLIENTEACEPTAACUERDO, IN_CLIENTEACEPTAACUERDO, PROCESO_VENTA.CLIENTEACEPTAACUERDO),
		PROCESO_VENTA.PRECIOVENTATOTAL = NVL2( IN_PRECIOVENTATOTAL, IN_PRECIOVENTATOTAL, PROCESO_VENTA.PRECIOVENTATOTAL),
		PROCESO_VENTA.PRECIOCOSTOTOTAL = NVL2( IN_PRECIOCOSTOTOTAL, IN_PRECIOCOSTOTOTAL, PROCESO_VENTA.PRECIOCOSTOTOTAL)
	WHERE PROCESO_VENTA.ID = IN_PROCESO_VENTA_ID;

	OUT_ID_SALIDA := IN_PROCESO_VENTA_ID;

    EXCEPTION
        WHEN EX_Sin_data THEN
            OUT_GLOSA := 'SP_PROCESO_VENTA_ACTUALIZAR no se encuentra id';
            OUT_ESTADO := -1;
            OUT_ID_SALIDA := -1;


        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := FN_GET_GLOSA_ERROR;

        NULL;
END SP_PROCESO_VENTA_ACTUALIZAR;